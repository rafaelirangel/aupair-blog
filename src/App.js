import './App.css';
// import { Routes, Route } from 'react-router-dom';
// import { Layout } from './components';
// import { NotFound, Home, About, AuPair, Contact } from './pages';
// import axios from 'axios';
// import { useState, useEffect } from 'react';
// import Container from 'react-bootstrap/Container';
// import Navbar from 'react-bootstrap/Navbar';
// import Button from 'react-bootstrap/Button';
// import Form from 'react-bootstrap/Form';

// // This code is configuring the Axios HTTP client to use Cross - Site Request Forgery(CSRF) protection for making AJAX requests to the server.
// // axios.defaults.xsrfCookieName is setting the name of the CSRF cookie to 'csrftoken', which is the default name used by Django.The CSRF token is a unique token that is generated by Django and sent to the client to prevent CSRF attacks.
// // axios.defaults.xsrfHeaderName is setting the name of the CSRF header to 'X-CSRFToken'.This header is sent along with the HTTP request to the server and contains the value of the CSRF token.
// // axios.defaults.withCredentials is setting the withCredentials option to true.This option tells Axios to include cookies and other authentication credentials in cross - origin requests.This is important for Django, which uses cookies for session authentication.
// // axios.create() is creating a new instance of the Axios client with a base URL of http://127.0.0.1:8. This base URL is the root URL for all the AJAX requests made using this client.

// axios.defaults.xsrfCookieName='csrftoken';
// axios.defaults.xsrfHeaderName='X-CSRFToken';
// axios.defaults.withCredentials = true;

// const client = axios.create({
//   baseURL: "http://127.0.0.1:8000"
// });


// function App() {

//   const [posts, setPost] = useState([]);
//   const [error, setError] = useState(null);

//   useEffect(() => {
//     const fetchCurrentPost = async () => {
//       try {
//         const result = await client.get("/posts/");
//         setPost(result.data);
//         console.log(result)
//       } catch (error) {
//         setError(error);
//       }
//     };

//     fetchCurrentPost();
//   }, []);

//   return (
//     <div className='app'>
//       <Routes>
//         <Route path='/' element={<Layout />}>
//           <Route index element={<Home posts={posts}/>} />
//           <Route path='/about' element={<About />} />
//           <Route path='/aupairProgram' element={<AuPair />} />
//           <Route path='/contact' element={<Contact />} />
//           <Route path='*' element={<NotFound />} /> 
//         </Route>
//       </Routes>
//     </div>
//   );
// }

// export default App;


import './App.css';
import { Routes, Route } from 'react-router-dom';
import { Layout } from './components';
import { NotFound, Home, About, AuPair, Contact } from './pages';
import axios from 'axios';
import { useState, useEffect } from 'react';
import { Provider } from 'react-redux';
import store from './store';

// This code is configuring the Axios HTTP client to use Cross - Site Request Forgery(CSRF) protection for making AJAX requests to the server.
// axios.defaults.xsrfCookieName is setting the name of the CSRF cookie to 'csrftoken', which is the default name used by Django.The CSRF token is a unique token that is generated by Django and sent to the client to prevent CSRF attacks.
// axios.defaults.xsrfHeaderName is setting the name of the CSRF header to 'X-CSRFToken'.This header is sent along with the HTTP request to the server and contains the value of the CSRF token.
// axios.defaults.withCredentials is setting the withCredentials option to true.This option tells Axios to include cookies and other authentication credentials in cross - origin requests.This is important for Django, which uses cookies for session authentication.
// axios.create() is creating a new instance of the Axios client with a base URL of http://127.0.0.1:8. This base URL is the root URL for all the AJAX requests made using this client.

//provider connect redux with react
axios.defaults.xsrfCookieName='csrftoken';
axios.defaults.xsrfHeaderName='X-CSRFToken';
axios.defaults.withCredentials = true;

// const client = axios.create({
//   baseURL: "http://127.0.0.1:8000"
// });


function App() {

  // const [posts, setPost] = useState([]);
  // const [error, setError] = useState(null);

  // useEffect(() => {
  //   const fetchCurrentPost = async () => {
  //     try {
  //       const result = await client.get("/post/");
  //       setPost(result.data);
  //       console.log(result)
  //     } catch (error) {
  //       setError(error);
  //     }
  //   };

  //   fetchCurrentPost();
  // }, []);

  return (
    <Provider store={store}>
    <div className='app'>
      <Routes>
        <Route path='/' element={<Layout />}>
          <Route index element={<Home />} />
          <Route path='/about' element={<About />} />
          <Route path='/aupairProgram' element={<AuPair />} />
          <Route path='/contact' element={<Contact />} />
          <Route path='*' element={<NotFound />} /> 
        </Route>
      </Routes>
    </div>
    </Provider>
  );
}

export default App;